on:
  push:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: trivy_db
          MYSQL_USER: trivy_user
          MYSQL_PASSWORD: trivy_password
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
        ports:
          - 3306:3306

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: ./webserver
        file: ./webserver/Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/my-php-app:latest

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: '${{ secrets.DOCKER_USERNAME }}/my-php-app:latest'
        format: 'json'
        output: 'trivy-report.json'

    - name: Upload Trivy JSON scan results
      uses: actions/upload-artifact@v3
      with:
        name: trivy-report-json
        path: trivy-report.json

    - name: Upload Trivy JSON to Remote Server
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      run: |
        cat <<EOF > private_key
        $SSH_PRIVATE_KEY
        EOF
        chmod 600 private_key
        scp -P 2002 -i private_key -o StrictHostKeyChecking=no trivy-report.json ubuntu@${{ secrets.REMOTE_HOST }}:/backup/rmstudio/portfolio_trivy/trivy_Test/
        ssh -i private_key -p 2002 -o StrictHostKeyChecking=no ubuntu@${{ secrets.REMOTE_HOST }} "
        python insert_trivy_to_mysql.py
        "
        rm private_key
